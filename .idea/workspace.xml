<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7a4d4353-3b4c-450f-8950-4798c22f658c" name="Changes" comment="version 1.0 without mock-test">
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/service/product_service_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/config.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/service/product_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/service/product_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/service/service.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2kso8NDZCgW7xfIOtLVWtfaQMx4" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build github.com/qsnake66/ProductWerehouse/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProductService_CreateProduct in github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProductService_DeleteProduct in github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProductService_GetAllProduct in github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProductService_GetProductById in github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestProductService_UpdateProduct in github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.gobench github.com/qsnake66/ProductWerehouse/pkg/service.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Проекты/SarkorTest&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;inlay.hints&quot;
  }
}</component>
  <component name="RunManager" selected="Go Build.go build github.com/qsnake66/ProductWerehouse/cmd">
    <configuration name="go build github.com/qsnake66/ProductWerehouse/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="SarkorTest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/qsnake66/ProductWerehouse/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestProductService_GetAllProduct in github.com/qsnake66/ProductWerehouse/pkg/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SarkorTest" />
      <working_directory value="$PROJECT_DIR$/pkg/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/qsnake66/ProductWerehouse/pkg/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductService_GetAllProduct\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProductService_GetProductById in github.com/qsnake66/ProductWerehouse/pkg/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SarkorTest" />
      <working_directory value="$PROJECT_DIR$/pkg/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/qsnake66/ProductWerehouse/pkg/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProductService_GetProductById\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/qsnake66/ProductWerehouse/pkg/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SarkorTest" />
      <working_directory value="$PROJECT_DIR$/pkg/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/qsnake66/ProductWerehouse/pkg/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="gobench github.com/qsnake66/ProductWerehouse/pkg/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SarkorTest" />
      <working_directory value="$PROJECT_DIR$/pkg/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/qsnake66/ProductWerehouse/pkg/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/qsnake66/ProductWerehouse/cmd" />
        <item itemvalue="Go Test.gobench github.com/qsnake66/ProductWerehouse/pkg/service" />
        <item itemvalue="Go Test.go test github.com/qsnake66/ProductWerehouse/pkg/service" />
        <item itemvalue="Go Test.TestProductService_GetProductById in github.com/qsnake66/ProductWerehouse/pkg/service" />
        <item itemvalue="Go Test.TestProductService_GetAllProduct in github.com/qsnake66/ProductWerehouse/pkg/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-b97fc8a1e17c-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.14494.238" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-GO-241.14494.238" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="version 1.0 without mock-test" />
    <option name="LAST_COMMIT_MESSAGE" value="version 1.0 without mock-test" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/gin-gonic/gin@v1.10.0/gin.go</url>
          <line>220</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="viper.GetString(&quot;db.host&quot;)" language="go" />
        <watch expression="*(*&quot;github.com/qsnake66/ProductWerehouse/pkg/repository.DatabaseConfig&quot;)(824634998352)" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/SarkorTest$go_build_github_com_qsnake66_ProductWerehouse_cmd.out" NAME="go build github.com/qsnake66/ProductWerehouse/cmd Coverage Results" MODIFIED="1724280622306" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>